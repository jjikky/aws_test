1----------------------------------------------------------------
var express = require('express');
var app = express();

const PORT = 5003;
app.get('/', function (req, res) {
    res.send('Hello world');
});

app.listen(PORT, function () {
    console.log(`Listening on : http://localhost:${PORT}`);
});

app.js에 위의 기본코드 작성 후 
npm init
npm install express


깃 연결
git init
.gitignore 생성후  https://github.com/github/gitignore/blob/master/Node.gitignore  여기있는거 복붙 + package-lock.json추가
README.md 생성
git remote add origin https://github.com/레포주소
add,commit,push

2----------------------------------------------------------------
babel설치 : 최신 js코드(es6)를 예전 코드로 변환해'줌
npm install @babel/node
npm install @babel/core
npm install @babel/preset-env
npm install core-js@3

.babelrc 파일 생성 및 아래 내용 추가
{
"presets": [
[
"@babel/preset-env",
{
"useBuiltIns": "entry",
"corejs":3
}
]
]
}

npm install nodemon -D

 "package.json 파일"에서     "start": "nodemon --exec babel-node app.js --delay 2"

파일 저장할때마다 서버 자동으로 껏다켜짐

3----------------------------------------------------------------------------
미들웨어란 ? 라우트(유저)와 실행하는 콜백함수(응답) 사이에서 동작하는 함수.
적용방법은,
전역으로 적용하는 = app.use() ;
각각 적용하는 = 라우팅 과 콜백함수 사이에 쓰는방법;

모든 미들웨어함수는 유저- 응답 사이에서 동작하므로 미들웨어가 끝나고 난 뒤, 응답(콜백함수)를 실행하기 위해서 next() 가 필수적임. 혹은 미들웨어에서 중단시킬 수 있음.

주요 미들웨어로는
Morgan - 로그를 남겨줌
helmet - 기초보안담당함
cookieParser - 쿠키를 다룰 수 있음
bodyParser - form데이터를 서버로 받아와서 활용가능함.

npm install morgan
npm install helmet
npm install cookie-parser
npm install body-parser